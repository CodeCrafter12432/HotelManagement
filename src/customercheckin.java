import java.awt.event.ItemEvent;
import static java.lang.System.exit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Satham.Lahari
 */
public class customercheckin extends javax.swing.JFrame {
     Connection conn=null;
     Statement st=null;
     PreparedStatement pst=null;
     PreparedStatement pst1=null;
     PreparedStatement pst2=null;
     PreparedStatement pst3=null;
     ResultSet rs=null;
    /**
     * Creates new form customercheckin
     */
    public customercheckin() {
         try {
             initComponents();
             SimpleDateFormat obj=new SimpleDateFormat("yyyy/MM/dd");
             Date date=new Date();
             textdate.setText(obj.format(date));
             Class.forName("com.mysql.cj.jdbc.Driver");
             String url = "jdbc:mysql://localhost:3306/login?zeroDateTimeBehavior=CONVERT_TO_NULL";
             //"jdbc:MySQL://localhost:3306/dbms_project";//?useSSL=false
             String mysql_user="root";
             String mysqlpswrd="Lahari@123";
             try {
                 conn = DriverManager.getConnection(url,mysql_user,mysqlpswrd);
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"found error in given details");
                 
             }
         } catch (ClassNotFoundException ex) {
              JOptionPane.showMessageDialog(this,"found error in given details");
         }
         checkin();
    }
 public void checkin() {
    try {
        // Select roomnumber based on bed, roomtype, and status
        pst = conn.prepareStatement("select roomno from hotelrooms where bedtype=? and roomtype=? and status=?");
        pst.setString(1, combobedtype.getItemAt(combobedtype.getSelectedIndex()));
        pst.setString(2, comboroomtype.getItemAt(comboroomtype.getSelectedIndex()));
        pst.setString(3, "not-booked");
        rs = pst.executeQuery();

        // Populate comboroomnumber with available room numbers
        comboroomnumber.removeAllItems();
        while (rs.next()) {
            comboroomnumber.addItem(rs.getString("roomno"));
        }

        // Select price based on selected roomtype and bedtype
        pst = conn.prepareStatement("select price from hotelrooms where roomtype=? and bedtype=?");
        pst.setString(1, comboroomtype.getItemAt(comboroomtype.getSelectedIndex()));
        pst.setString(2, combobedtype.getItemAt(combobedtype.getSelectedIndex()));
        rs = pst.executeQuery();

        // Set the price to textprice if a result is found
        if (rs.next()) {
            textprice.setText(rs.getString("price"));
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this,"found error in given details");
        Logger.getLogger(customercheckin.class.getName()).log(Level.SEVERE, null, ex);
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textmobilenumber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textnationality = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textadhaar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        textdate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        combobedtype = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        comboroomtype = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        textprice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        textcheckin = new javax.swing.JButton();
        textclear = new javax.swing.JButton();
        comboroomnumber = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        textemail = new javax.swing.JTextField();
        textaddress = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        textemaill = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Satham.Lahari\\Downloads\\dbmspro\\cancel (1).png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 30, 32));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Satham.Lahari\\Downloads\\dbmspro\\checkin (2).png")); // NOI18N
        jLabel1.setText("CUSTOMER CHECKIN");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 60, 290, 67));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 93, -1));

        textname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textnameActionPerformed(evt);
            }
        });
        getContentPane().add(textname, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 150, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Mobile number");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 93, -1));
        getContentPane().add(textmobilenumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 286, 150, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("address");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("noofcust");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, -1, -1));
        getContentPane().add(textnationality, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 150, 30));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("noofdays");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, -1, -1));
        getContentPane().add(textadhaar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 500, 150, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("check in date");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, -1, -1));

        textdate.setEditable(false);
        getContentPane().add(textdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 170, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Bed type");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, -1, -1));

        combobedtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "single", "double" }));
        combobedtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobedtypeItemStateChanged(evt);
            }
        });
        combobedtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobedtypeActionPerformed(evt);
            }
        });
        getContentPane().add(combobedtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 170, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Room type");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 340, -1, -1));

        comboroomtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ac", "non-ac" }));
        comboroomtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboroomtypeItemStateChanged(evt);
            }
        });
        getContentPane().add(comboroomtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, 170, 30));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Room number");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, -1, -1));

        textprice.setEditable(false);
        textprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textpriceActionPerformed(evt);
            }
        });
        getContentPane().add(textprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 500, 170, 30));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("price");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 480, 120, -1));

        textcheckin.setBackground(new java.awt.Color(204, 0, 0));
        textcheckin.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        textcheckin.setText("checkin now");
        textcheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textcheckinActionPerformed(evt);
            }
        });
        getContentPane().add(textcheckin, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 570, -1, -1));

        textclear.setBackground(new java.awt.Color(204, 0, 0));
        textclear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        textclear.setText("clear");
        textclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textclearActionPerformed(evt);
            }
        });
        getContentPane().add(textclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 570, -1, -1));

        comboroomnumber.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboroomnumberItemStateChanged(evt);
            }
        });
        comboroomnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboroomnumberActionPerformed(evt);
            }
        });
        getContentPane().add(comboroomnumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 440, 170, 30));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("id");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 547, 120, 20));

        textemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textemailActionPerformed(evt);
            }
        });
        getContentPane().add(textemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 590, 150, 30));
        getContentPane().add(textaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, 150, -1));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText("email");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 550, -1, -1));
        getContentPane().add(textemaill, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 590, 180, 30));

        jLabel14.setIcon(new javax.swing.ImageIcon("C:\\Users\\Satham.Lahari\\Downloads\\dbmspro\\backk (1).jpg")); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 4, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textnameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void combobedtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobedtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobedtypeActionPerformed

    private void combobedtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobedtypeItemStateChanged
        // TODO add your handling code here:
           if (evt.getStateChange() == ItemEvent.SELECTED) {
        checkin();
    }
    }//GEN-LAST:event_combobedtypeItemStateChanged

    private void comboroomtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboroomtypeItemStateChanged
        // TODO add your handling code here:
               if (evt.getStateChange() == ItemEvent.SELECTED) {
        checkin();
    }
    }//GEN-LAST:event_comboroomtypeItemStateChanged

    private void comboroomnumberItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboroomnumberItemStateChanged
        // TODO add your handling code here:
         
    }//GEN-LAST:event_comboroomnumberItemStateChanged

    private void textclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textclearActionPerformed
        // TODO add your handling code here:
        textname.setText("");
        
        textmobilenumber.setText("");
       
        textemail.setText("");
        
    }//GEN-LAST:event_textclearActionPerformed

    private void textcheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textcheckinActionPerformed
        // TODO add your handling code here:
        if(textname.getText().equals("")){
            textname.requestFocus();
            JOptionPane.showMessageDialog(this,"all details to be filled");
        }
        else if(textmobilenumber.getText().equals("")){
           textmobilenumber.requestFocus();
            JOptionPane.showMessageDialog(this,"all details to be filled");
        }
        else if(textadhaar.getText().equals("")){
           textadhaar.requestFocus();
            JOptionPane.showMessageDialog(this,"all details to be filled");
        }
        else if(textnationality.getText().equals("")){
           textnationality.requestFocus();
            JOptionPane.showMessageDialog(this,"all details to be filled");
        }
         else if(textemail.getText().equals("")){
           textemail.requestFocus();
            JOptionPane.showMessageDialog(this,"all details to be filled");
        } else if(textemaill.getText().equals("")){
           textemaill.requestFocus();
            JOptionPane.showMessageDialog(this,"all details to be filled");
        }else if(textaddress.getText().equals("")){
           textaddress.requestFocus();
            JOptionPane.showMessageDialog(this,"all details to be filled");
        }
        else {
    try {
        // Start a transaction
        conn.setAutoCommit(false);

        // Insert into hoteladmin table
        pst = conn.prepareStatement("INSERT INTO hoteladmin (noofcust, indate, custname, mobile, days, price, status) VALUES (?, ?, ?, ?, ?, ?, ?)");
        pst.setString(1, textnationality.getText());
        pst.setString(2, textdate.getText());
        pst.setString(3, textname.getText());
        pst.setString(4, textmobilenumber.getText());
        pst.setString(5, textadhaar.getText());
        pst.setString(6, textprice.getText());
        pst.setString(7, null);
        pst.executeUpdate();

        // Insert into bill table
        pst = conn.prepareStatement("INSERT INTO bill (id, roomno, indate, outdate, price, days, status) VALUES (?, ?, ?, ?, ?, ?, ?)");
        pst.setString(1, textemail.getText());
        pst.setString(2, comboroomnumber.getItemAt(comboroomnumber.getSelectedIndex()));
        pst.setString(3, textdate.getText());
        pst.setString(4, null);
        pst.setString(5, null);
        pst.setString(6, textadhaar.getText());
        pst.setString(7, null);
        pst.executeUpdate();

        // Insert into hotelcustomer table
        pst = conn.prepareStatement("INSERT INTO hotelcustomer (name, email, address, mobile, status, sq, ans, password, roomno, noofcust) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
        pst.setString(1, textname.getText());
        pst.setString(2, textemaill.getText());
        pst.setString(3, textaddress.getText());
        pst.setString(4, textmobilenumber.getText());
        pst.setString(5, null);
        pst.setString(6, null);
        pst.setString(7, null);
        pst.setString(8, null);
        pst.setString(9, comboroomnumber.getItemAt(comboroomnumber.getSelectedIndex()));
        pst.setString(10, textnationality.getText());
        pst.executeUpdate();

        // Update hotelrooms table
        pst = conn.prepareStatement("UPDATE hotelrooms SET status=? WHERE roomno=?");
        pst.setString(1, "booked");
        pst.setString(2, comboroomnumber.getItemAt(comboroomnumber.getSelectedIndex()));
        pst.executeUpdate();

        // Update hotelcustomer table
        pst = conn.prepareStatement("UPDATE hotelcustomer SET status=? WHERE roomno=?");
        pst.setString(1, "booked");
        pst.setString(2, comboroomnumber.getItemAt(comboroomnumber.getSelectedIndex()));
        pst.executeUpdate();

        // Commit the transaction
        conn.commit();
        
        // Reset fields
        textname.setText("");
        textadhaar.setText("");
        textmobilenumber.setText("");
        textnationality.setText("");
        textemail.setText("");
        textemaill.setText("");
        textaddress.setText("");
        
        // Display success message
        JOptionPane.showMessageDialog(this, "Customer check-in successful");
        
        // Update UI
        checkin();

    } catch (SQLException ex) {
        try {
            // Rollback the transaction
            conn.rollback();
        } catch (SQLException rollbackEx) {
            // Handle rollback exception
            rollbackEx.printStackTrace();
        }
        
        // Display error message
        JOptionPane.showMessageDialog(this, "Error occurred. Please provide valid entries.");
        
        // Log the exception
        Logger.getLogger(customercheckin.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        try {
            // Reset auto-commit to true
            conn.setAutoCommit(true);
        } catch (SQLException autoCommitEx) {
            // Handle auto-commit exception
            autoCommitEx.printStackTrace();
        }
    }
}

    }//GEN-LAST:event_textcheckinActionPerformed

    private void comboroomnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboroomnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboroomnumberActionPerformed

    private void textemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textemailActionPerformed

    private void textpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textpriceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customercheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customercheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customercheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customercheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customercheckin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combobedtype;
    private javax.swing.JComboBox<String> comboroomnumber;
    private javax.swing.JComboBox<String> comboroomtype;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField textaddress;
    private javax.swing.JTextField textadhaar;
    private javax.swing.JButton textcheckin;
    private javax.swing.JButton textclear;
    private javax.swing.JTextField textdate;
    private javax.swing.JTextField textemail;
    private javax.swing.JTextField textemaill;
    private javax.swing.JTextField textmobilenumber;
    private javax.swing.JTextField textname;
    private javax.swing.JTextField textnationality;
    private javax.swing.JTextField textprice;
    // End of variables declaration//GEN-END:variables
}
